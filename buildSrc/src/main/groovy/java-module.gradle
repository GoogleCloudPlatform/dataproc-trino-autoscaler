/*
 * Copyright 2023 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import org.gradle.api.tasks.testing.logging.TestExceptionFormat
plugins {
    id "base"
    id "java"
    id "idea"
    id "base-module"
    id "proto-module"
}
repositories {
    mavenCentral()
    gradlePluginPortal()
}

def autoValueVersion = "1.10.3"
def floggerVersion = "0.7.4"
def gsonVersion = "2.10.1"
def springBootVersion = "3.0.6"
def junitJupiterVersion = "5.9.2"
def truthVersion = "1.1.3"
project.ext.autoValueVersion = autoValueVersion
project.ext.floggerVersion = floggerVersion
project.ext.gsonVersion = gsonVersion
project.ext.springBootVersion = springBootVersion
project.ext.junitJupiterVersion = junitJupiterVersion
project.ext.truthVersion = truthVersion
project.ext {
    protobuf_util = "com.google.protobuf:protobuf-java-util:${project.ext.protoVersion}"
    commons_io = "commons-io:commons-io:2.7"
    springboot_web = "org.springframework.boot:spring-boot-starter-web:${springBootVersion}"
}

dependencies {

    compileOnly         "com.google.auto.value:auto-value-annotations:${autoValueVersion}"
    annotationProcessor "com.google.auto.value:auto-value:${autoValueVersion}"

    implementation "com.google.api.grpc:proto-google-common-protos:2.7.4"
    implementation "org.apache.commons:commons-lang3:3.12.0"
    implementation "com.google.guava:guava:31.1-jre"
    implementation "com.google.code.gson:gson:${gsonVersion}"
    // Logging framework
    implementation "com.google.flogger:flogger:${floggerVersion}"
    implementation "com.google.flogger:google-extensions:${floggerVersion}"
    runtimeOnly "com.google.flogger:flogger-system-backend:${floggerVersion}"
    testImplementation "com.google.truth:truth:${truthVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"
}
java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11

    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
        vendor = JvmVendorSpec.ADOPTIUM //Eclipse Temurin
    }
}
test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
        showStandardStreams = true
        exceptionFormat = TestExceptionFormat.FULL
    }
}
